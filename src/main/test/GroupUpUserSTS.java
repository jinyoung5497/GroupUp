import com.example.groupupcab302.GroupUpUser;import org.junit.jupiter.api.BeforeEach;import org.junit.jupiter.api.Test;import static org.junit.jupiter.api.Assertions.assertEquals;// before running STS ensure the database is deleted to reset user counter otherwise first condition will failpublic class GroupUpUserSTS {    private GroupUpUser groupUpUser;    @BeforeEach    void setUp(){        groupUpUser =  new GroupUpUser("FREESHEFFG", "Sheff", "G", "FlowsPart2@gmail.com", 0403776474, 18, "freeSHEFFGAND8THBLOCK");    }    @Test    public void testGetUserID(){        assertEquals(1, groupUpUser.getUserID());    }    @Test    public void testGetUserName(){        assertEquals("FREESHEFFG", groupUpUser.getUserName());    }    @Test    public void testGetFirstName(){        assertEquals("Sheff", groupUpUser.getFirstName());    }    @Test    public void testGetLastName(){        assertEquals("G", groupUpUser.getLastName());    }    @Test    public void testGetEmail(){        assertEquals("FlowsPart2@gmail.com", groupUpUser.getEmail());    }    @Test    public void testGetPhoneNumber(){        assertEquals(0403776474, groupUpUser.getPhoneNumber());    }    @Test    public void testGetAge(){        assertEquals(18, groupUpUser.getAge());    }    @Test    public void testGetPassword(){        assertEquals("freeSHEFFGAND8THBLOCK", groupUpUser.getPassword());    }    @Test    public void testSetUserID(){        groupUpUser.setUserID(15);        assertEquals(15, groupUpUser.getUserID());    }    @Test    public void testSetUserName(){        groupUpUser.setUserName("IHEART8BLOCK");        assertEquals("IHEART8BLOCK", groupUpUser.getUserName());    }    @Test    public void testSetFirstName(){        groupUpUser.setFirstName("V3RYRAR3BOYZ");        assertEquals("V3RYRAR3BOYZ", groupUpUser.getFirstName());    }    @Test    public void testSetLastName(){        groupUpUser.setLastName("WE<3Tecca");        assertEquals("WE<3Tecca", groupUpUser.getLastName());    }    @Test    public void testSetEmail(){        groupUpUser.setEmail("SAYMYGRACE@gmail.com");        assertEquals("SAYMYGRACE@gmail.com", groupUpUser.getEmail());    }    /*    @Test    public void testSetPhoneNumber(){        // phone number range limited as due to leading 0. number is treated as base 8 extending the range of data type int        // this is not the case of the application as user phone number recieved is a string        // if this test case passes then all is good        groupUpUser.setPhoneNumber(0302312321);        assertEquals(0403776474, groupUpUser.getPhoneNumber());    }     */    @Test    public void testSetAge(){        groupUpUser.setAge(100);        assertEquals(100, groupUpUser.getAge());    }    @Test    public void testSetPassword(){        groupUpUser.setPassword("FE!N");        assertEquals("FE!N", groupUpUser.getPassword());    }    @Test    public void testGetAllUserDetails(){        String userDetails = "userName: " + "FREESHEFFG" + ", First Name: " + "Sheff" + ", Last Name: "                + "G" + ", email: " + "FlowsPart2@gmail.com" + ", phoneNumber: " + "0403776474" + ", age: " +                18 + ", password: " + "freeSHEFFGAND8THBLOCK";        assertEquals(userDetails, groupUpUser.getAllUserDetails());    }}